# Chunk 1
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: tsibble-setup
library(tidyverse)
library(tsibble)
library(lubridate)
weather <- nycflights13::weather %>%
select(origin, time_hour, temp, humid, precip)
weather
# Chunk 3: tsibble-coerce
weather_tsbl <- as_tsibble(weather, index=time_hour, key=id(origin))
weather_tsbl
# Chunk 4: tsibble-data-manipulation
weather_tsbl %>%
group_by(origin) %>%
index_by(month = yearmonth(time_hour)) %>%
summarise(
temp_high = max(temp, na.rm = TRUE),
temp_average = mean(temp, na.rm = TRUE),
temp_low = min(temp, na.rm = TRUE)
) %>%
DT::datatable()
# Chunk 5: tsibble-data-irregular
flights <- nycflights13::flights %>%
mutate(sched_dep_datetime = make_datetime(year, month, day, hour, minute, tz = "America/New_York")) %>%
select(carrier, flight, year, month, day, hour, minute, sched_dep_datetime, dep_delay)
flights
# Chunk 6: tsibble-data-irregular-convert
flights_tsbl <- as_tsibble(flights, key=id(carrier, flight),
index=sched_dep_datetime,
regular = FALSE)
flights_tsbl
# Chunk 7: tsibble-data-irregular-convert-fix
flights_tsbl %>%
group_by(carrier, flight) %>%
index_by(month = yearmonth(sched_dep_datetime)) %>%
summarise(delay_mean = mean(dep_delay, na.rm=TRUE)) %>%
arrange(desc(delay_mean))
# Chunk 8: tsibble-na
pedestrian
has_gaps(pedestrian)
# Chunk 9: tsibble-na-count
pedestrian %>%
count_gaps(.fill=TRUE) %>%
arrange(desc(.n))
# Chunk 10: tsibble-na-scan
pedestrian %>%
filter(Sensor == "Bourke Street Mall (North)") %>%
scan_gaps()
# Chunk 11: tsibble-na-viz
pedestrian %>%
count_gaps(.fill=TRUE) %>%
ggplot(aes(x = Sensor, colour = Sensor)) +
geom_linerange(aes(ymin = .from, ymax = .to)) +
geom_point(aes(y = .from)) +
geom_point(aes(y = .to)) +
coord_flip() +
theme(legend.position = "top") +
labs(x="")
# Chunk 12: tsibble-na-fill
na_g <- pedestrian %>%
fill_gaps(.full=TRUE) %>%
ggplot(aes(x=Date_Time, y=Count, color=Sensor)) +
geom_line() +
facet_wrap(~Sensor) +
theme(legend.position = "none")
fill_g <- pedestrian %>%
fill_gaps(Count = mean(Count), .full=TRUE) %>%
ggplot(aes(x=Date_Time, y=Count, color=Sensor)) +
geom_line() +
facet_wrap(~Sensor) +
theme(legend.position = "none")
cowplot::plot_grid(na_g, fill_g)
# Chunk 13: tsibble-pedestrian
pedestrian_tsbl <- pedestrian %>%
fill_gaps(.full = TRUE)
pedestrian_tsbl
# Chunk 14: tsibble-pedestrian-ma
pedestrian_tsbl %>%
group_by(Sensor) %>%
mutate(Daily_MA = slide_dbl(Count, mean, na.rm = TRUE, .size = 3, .align = "center"
))
# Chunk 15: tsibble-pedestrian-map
pedestrian_mth_tsbl <- pedestrian_tsbl %>%
mutate(YrMth = yearmonth(Date_Time)) %>%
nest(-Sensor, -YrMth)
pedestrian_mth_tsbl
# Chunk 16: tsibble-pedestrian-map-combine
pedestrian_mth_tsbl %>%
group_by(Sensor) %>%
mutate(Monthly_MA = slide_dbl(data,
~ mean(.$Count, na.rm = TRUE), .size = 3, .align = "center", .bind = TRUE
))
# Chunk 17: tsibble-pedestrian-map-lm
fit_reg <- function(...) {
data <- tibble(...)
fit <- lm(Count ~ Time, data = data)
list(fitted = fitted(fit), resid = residuals(fit))
}
pedestrian_reg_tsbl <- pedestrian %>%
filter_index(~ "2015-03") %>%
nest(-Sensor) %>%
mutate(diag = purrr::map(data, ~ pslide_dfr(., fit_reg, .size = 24 * 7)))
pedestrian_reg_tsbl$diag
pedestrian_reg_tsbl <- pedestrian %>%
filter_index(~ "2015-03") %>%
nest(-Sensor) %>%
mutate(reg = purrr::map(data, ~ pslide_dfr(., fit_reg, .size = 24 * 7)))
pedestrian_reg_tsbl$reg[[1]]
pedestrian_reg_tsbl
setwd("D:/docs/spatial")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
# Chunk 2: dokdo-elevation
library(rayshader)
library(sp)
library(raster)
library(scales)
library(magick)
ulleung <- image_read("data/dokdo/(N02면)GM10333IH0014_001.jpg")
ulleung_img <- ulleung %>%
image_resize("10%") %>%
image_crop(geometry = "300x200+110+400") %>%
image_resize("200%")
ulleung_img
# Chunk 3: dokdo-xyz
library(tidyverse)
library(raster)
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation"))
dokdo_raster <- rasterFromXYZ(dokdo_xzy)
plot(dokdo_raster)
# Chunk 4: aerial-pdf
library("pdfimager") # remotes::install_github("sckott/pdfimager")
dokdo_pdf <- pdimg_images("data/dokdo/dokdo-aerial.pdf")
dokdo_aerial_photo_path <- dokdo_pdf[[1]] %>%
select(path) %>%
pull()
dokdo_aerial_photo_path
dokdo_aerial_photo <- image_read(dokdo_aerial_photo_path) %>%
image_resize("20%") %>%
image_crop(geometry = "269x150+10+50") %>%
image_resize("200%")
dokdo_aerial_photo
library(tidyverse)
library(raster)
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation"))
dokdo_raster <- rasterFromXYZ(dokdo_xzy)
plot(dokdo_raster)
dokdo_xzy
dokdo_g <- dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = value), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_g
dokdo_g <- dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_g
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 63100,
y <527500)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 63150,
x < 633000,
y < 527500,
y > 526500)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 631500,
x < 633000,
y < 527500,
y > 526500)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 631500,
x < 633000,
y < 527500,
y > 526400)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 631500,
x < 632700,
y < 527500,
y > 526400)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_xzy <- read_delim("data/dokdo/독도_DEM/37116.xyz", delim = " ", col_name = FALSE) %>%
set_names(c("x", "y", "elevation")) %>%
filter(x > 631500,
x < 632700,
y < 527250,
y > 526400)
dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_g <- dokdo_xzy %>%
ggplot(aes(x = x, y = y, fill = elevation)) +
geom_tile() +
geom_contour(aes(z = elevation), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
dokdo_g %>%
plot_gg(
multicore = TRUE,
raytrace = TRUE,
width = 7,
height = 4,
scale = 300,
windowsize = c(1400, 866),
zoom = 0.6,
phi = 30,
theta = 30
)
render_movie("fig/movie_dokdo.mp4", frames = 520, fps=30, zoom=1, fov = 30)
dokdo_g %>%
plot_gg(
multicore = TRUE,
raytrace = TRUE,
width = 7,
height = 4,
scale = 300,
windowsize = c(1400, 866),
zoom = 0.6,
phi = 30,
theta = 30
)
render_movie("fig/movie_dokdo.mp4", frames = 520, fps=30, zoom=1, fov = 30)
dokdo_g %>%
plot_gg(
multicore = TRUE,
raytrace = TRUE,
width = 7,
height = 4,
scale = 300,
windowsize = c(1400, 866),
zoom = 0.6,
phi = 30,
theta = 30
)
render_movie("fig/movie_dokdo.mp4", frames = 260, fps=30, zoom=1, fov = 30)
volcano_tbl <- volcano %>%
as_tibble(.name_repair = "minimal") %>%
set_names(str_c("V", seq_along(names(.)))) %>%
rowid_to_column(var = "x") %>%
pivot_longer(
cols      = contains("V"),
names_to  = "y",
values_to = "value"
) %>%
mutate(y = str_remove(y, "^V") %>% as.numeric())
g2 <- volcano_tbl %>%
ggplot(aes(x = x, y = y, fill = value)) +
geom_tile() +
geom_contour(aes(z = value), color = "black") +
scale_x_continuous("X", expand = c(0,0)) +
scale_y_continuous("Y",expand = c(0,0)) +
scale_fill_gradientn("Z", colours = terrain.colors(10)) +
coord_fixed()
g2 %>%
plot_gg(
multicore = TRUE,
raytrace = TRUE,
width = 7,
height = 4,
scale = 300,
windowsize = c(1400, 866),
zoom = 0.6,
phi = 30,
theta = 30
)
dokdo_xzy
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation)
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = y)
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation)
dokdo_matrix <- dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation)
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix, zscale = 3)
volcano
dokdo_matrix
dokdo_matrix <- dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation) %>%
as.matrix()
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix, zscale = 3)
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix)
dokdo_matrix
dokdo_xzy
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation)
volcano
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation) %>%
as.matrix()
dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation)
dokdo_matrix <- dokdo_xzy %>%
pivot_wider(names_from = x, values_from = elevation) %>%
select(-y) %>%
as.matrix()
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix)
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix, , zscale = 3)
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix, zscale = 3)
dokdo_matrix %>%
sphere_shade() %>%
plot_3d(dokdo_matrix, zscale = 3)
render_movie("fig/movie_dokdo_mat.mp4", frames = 520, fps=30, zoom=1, fov = 45)
